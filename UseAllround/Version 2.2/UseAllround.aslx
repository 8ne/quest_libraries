<?xml version="1.0"?>
<library>

<!--

  ****************************************************************************************************
  UseAllround - use the 'use' verb global for opening, switching and put on
  by EightOne, 2017-2018
  Version 2.2
  ****************************************************************************************************
  Quest-Version: 5.7
  ****************************************************************************************************
  If you are viewing this on GitHub and want to download it, right click on the RAW button
  just above, and select "Save link as..."
  ****************************************************************************************************
  Download the UseAllround.aslx, integrate it as Library in Quest.
  ****************************************************************************************************
  Under the tab "Use as" you can now select whether you want to use it as "Open","Switch" or "Put on".
  Put on" can be combined with "Open" or "Switch" as one uses "Use with" and the other only "Use".
  ****************************************************************************************************

  ****************************************************************************************************
  Version 2.2
  Dress and undress added
  ****************************************************************************************************
  Version 2.1
  Languages combined.
  ****************************************************************************************************
  Version 2.0
  Problem with saved games solved.
  Now available in English and German.
  ATTENTION! No downward compatibility to version 1.1.
  ****************************************************************************************************
  Version 1.1
  Now you can also use other verbs for "Use as".
  ****************************************************************************************************

-->

  <template name="UseAsOpen">open</template>
  <template name="UseAsClose">close</template>
  <template name="UseAsTurnOn">turn on</template>
  <template name="UseAsTurnOff">turn off</template>
  <template name="UseAsWear">wear</template>
  <template name="UseAsRemove">remove</template>
  <template name="UseAsPut">put</template>
  <template name="UseAsOn">on</template>
  <template name="EditorObjectUseAsTabCaption">Use as</template>
  <template name="EditorObjectUseAsCaption1">Use as with one object</template>
  <template name="EditorObjectUseAsCaption3">Another verb</template>
  <template name="EditorObjectUseAsCaption2">And / Or use as with two objects</template>
  <template name="EditorObjectUseAsNot">Without</template>
  <template name="EditorObjectUseAsOpen">Open / Close</template>
  <template name="EditorObjectUseAsSwitch">Turn On / Off</template>
  <template name="EditorObjectUseAsWear">Wear / Remove</template>
  <template name="EditorObjectUseAsOther">Another verb</template>
  <template name="EditorObjectUseAsPut">Put on</template>
  
<!-- Zur Umstellung auf Deutsch folgende Zeilen einklammern -->
<!--
  <template name="UseAsOpen">öffne</template>
  <template name="UseAsClose">schließe</template>
  <template name="UseAsTurnOn">schalte an</template>
  <template name="UseAsTurnOff">schalte aus</template>
  <template name="UseAsWear">anziehen</template>
  <template name="UseAsRemove">ausziehen</template>
  <template name="UseAsPut">lege</template>
  <template name="UseAsOn">in</template>
  <template name="EditorObjectUseAsTabCaption">Benutze als</template>
  <template name="EditorObjectUseAsCaption1">Benutze als mit einem Objekt</template>
  <template name="EditorObjectUseAsCaption3">Anderes Verb</template>
  <template name="EditorObjectUseAsCaption2">Und / Oder Benutze als mit zwei Objekten</template>
  <template name="EditorObjectUseAsNot">Ohne</template>
  <template name="EditorObjectUseAsOpen">Öffnen / Schließen</template>
  <template name="EditorObjectUseAsSwitch">Ein- / Ausschalten</template>
  <template name="EditorObjectUseAsWear">Anziehen / Ausziehen</template>
  <template name="EditorObjectUseAsOther">Anderes Verb</template>
  <template name="EditorObjectUseAsPut">Lege in</template>
-->

  <function name="UseAllround" parameters="typ, object1, object2">
    switch (LCase(typ)) {
      case (LCase(Template("UseAsOpen"))) {
        if (not object1.isopen) {
          HandleSingleCommand (Template("UseAsOpen") + " " + GetDisplayAlias(object1))
        }
        else {
          HandleSingleCommand (Template("UseAsClose") + " " + GetDisplayAlias(object1))
        }
      }
      case (LCase(Template("UseAsTurnOn"))) {
        if (not IsSwitchedOn(object1)) {
          HandleSingleCommand (Template("UseAsTurnOn") + " " + GetDisplayAlias(object1))
        }
        else {
          HandleSingleCommand (Template("UseAsTurnOff") + " " + GetDisplayAlias(object1))
        }
      }
      case (LCase(Template("UseAsWear"))) {
        if (not object1.worn) {
          HandleSingleCommand (Template("UseAsWear") + " " + GetDisplayAlias(object1))
        }
        else {
          HandleSingleCommand (Template("UseAsRemove") + " " + GetDisplayAlias(object1))
        }
      }
      case (LCase(Template("UseAsPut"))) {
        HandleSingleCommand (Template("UseAsPut") + " " + GetDisplayAlias(object2) + " " + Template("UseAsOn")  + " " + GetDisplayAlias(object1))
      }
      default {
        HandleSingleCommand (typ + " " + GetDisplayAlias(object1))
      }
    }
  </function>
  
  <type name="useasopen">
    <feature_usegive type="boolean">true</feature_usegive>
    <use type="script">
      UseAllround (Template("UseAsOpen"), this, null)
    </use>
  </type>
  
  <type name="useasturn">
    <feature_usegive type="boolean">true</feature_usegive>
    <use type="script">
      UseAllround (Template("UseAsTurnOn"), this, null)
    </use>
  </type>

  <type name="useaswear">
    <feature_usegive type="boolean">true</feature_usegive>
    <use type="script">
      UseAllround (Template("UseAsWear"), this, null)
    </use>
  </type>
  
  <type name="useasput">
    <feature_usegive type="boolean">true</feature_usegive>
    <useon type="scriptdictionary"/>
    <useanything type="script">
      UseAllround (Template("UseAsPut"), this, object)
    </useanything>
    <selfuseon type="scriptdictionary"/>
    <selfuseanything type="script">
      UseAllround (Template("UseAsPut"), this, object)
    </selfuseanything>
  </type>
  
  <type name="useasother">
    <feature_usegive type="boolean">true</feature_usegive>
    <use type="script">
      UseAllround (this.useasotherverb, this, null)
    </use>
  </type>
  
  <!-- Interface -->
  <tab>
    <parent>_ObjectEditor</parent>
    <caption>[EditorObjectUseAsTabCaption]</caption>
    <mustnotinherit>editor_room; defaultplayer</mustnotinherit>

    <control>
      <controltype>dropdowntypes</controltype>
      <caption>[EditorObjectUseAsCaption1]</caption>
      <types>*=[EditorObjectUseAsNot]; useasopen=[EditorObjectUseAsOpen]; useasturn=[EditorObjectUseAsSwitch]; useaswear=[EditorObjectUseAsWear]; useasother=[EditorObjectUseAsOther]</types>
      <width>150</width>
    </control>

    <control>
      <controltype>textbox</controltype>
      <caption>[EditorObjectUseAsCaption3]</caption>
      <attribute>useasotherverb</attribute>
      <mustinherit>useasother</mustinherit>
    </control>

    <control>
      <controltype>dropdowntypes</controltype>
      <caption>[EditorObjectUseAsCaption2]</caption>
      <types>*=[EditorObjectUseAsNot]; useasput=[EditorObjectUseAsPut]</types>
      <width>150</width>
    </control>
  </tab>

</library>