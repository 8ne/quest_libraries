<?xml version="1.0"?>
<library>

<!--

  ****************************************************************************************************
  RunCommand - Executes commands as in the command prompt
  by SoonGames, 2018
  Version 1.2
  ****************************************************************************************************
  Quest-Version: 5.7
  ****************************************************************************************************
  If you are viewing this on GitHub and want to download it, right click on the RAW button
  just above, and select "Save link as..."
  ****************************************************************************************************
  Download the RunCommand.aslx, integrate it as Library in Quest.
  ****************************************************************************************************
  Under Add Script / Add Scripts you will find a new item named "Run Command".
  ****************************************************************************************************

  ****************************************************************************************************
  Version 1.2
  For easier internationalization, the commands are now only handed over in English.
  Added a free text version
  ****************************************************************************************************

-->

  <!-- Languages -->
  <!-- English -->
  <template name="EditorScriptsScriptsScriptsRunCommandAdd">Run Command (freetext)</template>
  <template name="EditorScriptsScriptsScriptsRunCommandAdd0">Run Command (single)</template>
  <template name="EditorScriptsScriptsScriptsRunCommandAdd1">Run Command (1 object)</template>
  <template name="EditorScriptsScriptsScriptsRunCommandAdd2">Run Command (2 objects)</template>
  <template name="EditorScriptsScriptsRunCommandCommand">Run Command</template>
  <template name="EditorScriptsScriptsRunCommandVerbs0">"look"=look;"inventory"=inventory;"wait"=wait;"help"=help;"save"=save;"quit"=quit</template>
  <template name="EditorScriptsScriptsRunCommandVerbs1">"lookat"=lookat;"read"=read;"take"=take;"open"=open;"close"=close;"use"=use;"move"=move;"eat"=eat;"drink"=drink;"turn on"=turn on;"turn off"=turn off;"lock"=look;"unlock"=unlook;"wear"=wear;"remove"=remove;"put"=put;"talk to"=talk to;"tell"=tell;"ask"=ask;"give"=give</template>
  <template name="EditorScriptsScriptsRunCommandVerbs2">"use"=use;"put"=put;"tell"=tell;"ask"=ask;"give"=give</template>
  <template name="EditorScriptsScriptsRunCommandPrePositions">"on"=on;"in"=in;"from"=from;"to"=to;"with"=with;"about"=about;"to"=to</template>

  <!-- Zur Umstellung auf Deutsch folgende Zeilen einklammern -->
  <!-- Deutsch -->
  <!--
  <template name="EditorScriptsScriptsScriptsRunCommandAdd">Kommando ausführen (Freitext)</template>
  <template name="EditorScriptsScriptsScriptsRunCommandAdd0">Kommando ausführen (Single)</template>
  <template name="EditorScriptsScriptsScriptsRunCommandAdd1">Kommando ausführen (1 Objekt)</template>
  <template name="EditorScriptsScriptsScriptsRunCommandAdd2">Kommando ausführen (2 Objekte)</template>
  <template name="EditorScriptsScriptsRunCommandCommand">Führe Kommando aus</template>
  <template name="EditorScriptsScriptsRunCommandVerbs0">"look"=schau;"inventory"=inventar;"wait"=warte;"help"=hilfe;"save"=save;"quit"=quit</template>
  <template name="EditorScriptsScriptsRunCommandVerbs1">"lookat"=untersuche;"read"=lese;"take"=nimm;"open"=öffne;"close"=schliesse;"use"=benutze;"move"=bewege;"eat"=esse;"drink"=trinke;"turn on"=schalte ein;"turn off"=schalte aus;"look"=schließe ab;"unlook"=schließe auf;"wear"=anziehen;"remove"=ausziehen;"put"=lege;"talk to"=rede mit;"tell"=erzähle;"ask"=frage;"give"=gib</template>
  <template name="EditorScriptsScriptsRunCommandVerbs2">"use"=benutze;"put"=lege;"tell"=erzähle;"ask"=frage;"give"=gib</template>
  <template name="EditorScriptsScriptsRunCommandPrePositions">"on"=an;"in"=in;"from"=von;"with"=mit;"about"=nach;"to"=zu</template>
  -->

  
  <!-- Script-inscription -->

  <!-- RunCommand -->
  <editor>
    <appliesto>(function)RunCommand</appliesto>
    <display>RunCommand #0</display>
    <category>[EditorScriptsScriptsScripts]</category>
    <add>[EditorScriptsScriptsScriptsRunCommandAdd]</add>
    <create>RunCommand ("")</create>
    <onlydisplayif>GetString(game, "_editorstyle") = null</onlydisplayif>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsRunCommandCommand]</caption>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>0</attribute>
      <simple>message</simple>
      <expand/>
    </control>
  </editor>

  <!-- RunCommand (without object) -->
  <editor>
    <appliesto>(function)RunCommand0</appliesto>
    <display>RunCommand (without object) #0</display>
    <category>[EditorScriptsScriptsScripts]</category>
    <add>[EditorScriptsScriptsScriptsRunCommandAdd0]</add>
    <create>RunCommand0 ("")</create>
    <onlydisplayif>GetString(game, "_editorstyle") = null</onlydisplayif>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsRunCommandCommand]</caption>
    </control>

    <control>
      <controltype>dropdown</controltype>
      <attribute>0</attribute>
      <validvalues type="simplestringdictionary">[EditorScriptsScriptsRunCommandVerbs0]</validvalues>
    </control>

  </editor>
  
  <!-- RunCommand (with one object) -->
  <editor>
    <appliesto>(function)RunCommand1</appliesto>
    <display>Run Command (with one object) #0 #1</display>
    <category>[EditorScriptsScriptsScripts]</category>
    <add>[EditorScriptsScriptsScriptsRunCommandAdd1]</add>
    <create>RunCommand1 ("",)</create>
    <onlydisplayif>GetString(game, "_editorstyle") = null</onlydisplayif>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsRunCommandCommand]</caption>
    </control>

    <control>
      <controltype>dropdown</controltype>
      <attribute>0</attribute>
      <validvalues type="simplestringdictionary">[EditorScriptsScriptsRunCommandVerbs1]</validvalues>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>name</simple>
      <simpleeditor>objects</simpleeditor>
    </control>

  </editor>
  
  <!-- RunCommand (with two objects) -->
  <editor>
    <appliesto>(function)RunCommand2</appliesto>
    <display>RunCommand (with two objects) #0 #1 #2</display>
    <category>[EditorScriptsScriptsScripts]</category>
    <add>[EditorScriptsScriptsScriptsRunCommandAdd2]</add>
    <create>RunCommand2 ("",,"",)</create>
    <onlydisplayif>GetString(game, "_editorstyle") = null</onlydisplayif>

    <control>
      <controltype>label</controltype>
      <caption>[EditorScriptsScriptsRunCommandCommand]</caption>
    </control>

    <control>
      <controltype>dropdown</controltype>
      <attribute>0</attribute>
      <validvalues type="simplestringdictionary">[EditorScriptsScriptsRunCommandVerbs2]</validvalues>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>1</attribute>
      <simple>name</simple>
      <simpleeditor>objects</simpleeditor>
    </control>

    <control>
      <controltype>dropdown</controltype>
      <attribute>2</attribute>
      <validvalues type="simplestringdictionary">[EditorScriptsScriptsRunCommandPrePositions]</validvalues>
    </control>

    <control>
      <controltype>expression</controltype>
      <attribute>3</attribute>
      <simple>name</simple>
      <simpleeditor>objects</simpleeditor>
    </control>

  </editor>

  <!-- Functions -->

  <function name="StrToDict" parameters="str" type="stringdictionary">
    strwq = Replace(ToString(str), "\"", "")
    list = split(strwq, ";")
    dict = NewStringDictionary ()
    foreach (item, list) {
      cont = split (item, "=")
      key = cont[0]
      val = cont[1]
      dictionary add (dict, key, val)
    }
    return (dict)
  </function>

  <function name="LangAssign" parameters="i,ve,obj1,pr,obj2">
    if (not game.languageid = "en") {
      dict = StrToDict(ToString(Template("EditorScriptsScriptsRunCommandVerbs" + i)))
      verb = StringDictionaryItem(dict, ve)
      if (not pr = "") {
        dict = StrToDict(Template("EditorScriptsScriptsRunCommandPrePositions"))
        prepos = StringDictionaryItem(dict, pr)
      }
      else prepos = ""
    }
    else {
      verb = ve
      prepos = pr
    }

    if (TypeOf (obj1) = "object") object1 = GetDisplayAlias(obj1)
    else object1 = ""
    if (TypeOf (obj2) = "object") object2 = GetDisplayAlias(obj2)
    else object2 = ""

    command = verb + " " + object1 + " " + prepos + " " + object2
    HandleSingleCommand (Trim(command))
  </function>

  <function name="RunCommand" parameters="verb">
    HandleSingleCommand (verb)
  </function>

  <function name="RunCommand0" parameters="verb">
    LangAssign (0, verb, "", "", "")
  </function>

  <function name="RunCommand1" parameters="verb,object">
    LangAssign (1, verb, object, "", "")
  </function>

  <function name="RunCommand2" parameters="verb,object1,prepos,object2">
    LangAssign (2, verb, object1, prepos, object2)
  </function>
  
</library>